#tool nuget:?package=NUnit.ConsoleRunner&version=3.4.0
//////////////////////////////////////////////////////////////////////
// ARGUMENTS
//////////////////////////////////////////////////////////////////////

var target = Argument("target", "Default");
var configuration = Argument("configuration", "Release");

//////////////////////////////////////////////////////////////////////
// PREPARATION
//////////////////////////////////////////////////////////////////////

// Define directories.
var buildDir = Directory("./src/Example/bin") + Directory(configuration);

//////////////////////////////////////////////////////////////////////
// TASKS
//////////////////////////////////////////////////////////////////////

Task("Clean")
    .Does(() =>
{
    CleanDirectory(buildDir);
});

Task("NuGetRestore")
    .IsDependentOn("Clean")
    .Does(() =>
{
    DotNetCoreRestore();
});

Task("Build")
    .IsDependentOn("NuGetRestore")
    .Does(() =>
{
    DotNetCoreBuild("./Gos.Tools.Cqs/");
    DotNetCoreBuild("./Gos.Tools.Cqs.Tests/");
});

Task("Tests")
    .IsDependentOn("Build")
    .Does(() =>
{
    DotNetCoreTest("./Gos.Tools.Cqs.Tests/Gos.Tools.Cqs.Tests.csproj");
});

Task("Pack")
    .IsDependentOn("Tests")
    .Does(() =>
{
    DotNetCorePack("./Gos.Tools.Cqs/");
});

//////////////////////////////////////////////////////////////////////
// TASK TARGETS
//////////////////////////////////////////////////////////////////////

Task("Default")
    .IsDependentOn("Pack");

//////////////////////////////////////////////////////////////////////
// EXECUTION
//////////////////////////////////////////////////////////////////////

RunTarget(target);